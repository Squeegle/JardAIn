version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jardain_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-jardain}
      POSTGRES_USER: ${POSTGRES_USER:-jardain_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-jardain_user} -d ${POSTGRES_DB:-jardain}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # JardAIn Application
  app:
    build: .
    container_name: jardain_app
    environment:
      # Database Configuration
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-jardain}
      POSTGRES_USER: ${POSTGRES_USER:-jardain_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
      
      # Application Configuration
      APP_NAME: "JardAIn Garden Planner"
      DEBUG: "false"
      HOST: "0.0.0.0"
      PORT: 8000
      LOG_LEVEL: "info"
      
      # LLM Configuration (set these in .env file)
      LLM_PROVIDER: "${LLM_PROVIDER:-ollama}"
      OPENAI_API_KEY: "${OPENAI_API_KEY:-}"
      OLLAMA_BASE_URL: "${OLLAMA_BASE_URL:-http://host.docker.internal:11434}"
      
      # Security
      ALLOWED_ORIGINS: "http://localhost:8000,https://yourdomain.com"
      
    ports:
      - "8000:8000"
    volumes:
      - ./generated_plans:/app/generated_plans
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: jardain_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: jardain_network 